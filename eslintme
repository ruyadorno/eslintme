#!/usr/bin/env bash

if [ "$1" == "--version" ]; then
	echo "2.0.0"
	exit 0;
fi

if [ "$1" == "--help" ]; then
	echo "eslintme [options] [file.js]

Options:
  --help    Show this help menu
  --version Prints version number"
	exit 0;
fi

# figures out the path to eslint_d executable
function findeslintd() {
	source="${BASH_SOURCE[0]}"
	while [ -h "$source" ]; do
		currdir="$( cd -P "$( dirname "$source" )" && pwd )"
		source="$(readlink "$source")"
		[[ $source != /* ]] && source="$currdir/$source"
	done
	currdir="$( cd -P "$( dirname "$source" )" && pwd )"
	if hash eslint_d 2>/dev/null; then
		# use global eslint_d install
		echo eslint_d
	elif [ -e "$currdir/node_modules/eslint_d/bin/eslint_d.js" ]; then
		# nested install
		echo "$currdir/node_modules/eslint_d/bin/eslint_d.js"
	else
		# flat npm3 install
		echo "$currdir/../eslint_d/bin/eslint_d.js"
	fi
}

# forwards eslint_d commands
if [ "$1" == "stop" ]; then
	eslintexec="$(findeslintd)"
	"$eslintexec" stop
	exit 0;
fi
if [ "$1" == "start" ]; then
	eslintexec="$(findeslintd)"
	"$eslintexec" start
	exit 0;
fi
if [ "$1" == "status" ]; then
	eslintexec="$(findeslintd)"
	"$eslintexec" status
	exit 0;
fi
if [ "$1" == "restart" ]; then
	eslintexec="$(findeslintd)"
	"$eslintexec" restart
	exit 0;
fi

# gets the port of eslint_d running server
eslintddata=$(cat ~/.eslint_d 2> /dev/null)
eslintdport="$(echo $eslintddata | cut -d ' ' -f 1)"
eslintdtoken="$(echo $eslintddata | cut -d ' ' -f 2)"

# if the server isn't running starts it and get the port
if [ -z "$eslintddata" ]; then

	eslintexec="$(findeslintd)"

	# starts the eslint_d server
	"$eslintexec" start
	sleep 0.1
	eslintddata=$(cat ~/.eslint_d)
	eslintdport=$(echo $eslintddata | cut -d ' ' -f 1)
	eslintdtoken=$(echo $eslintddata  | cut -d ' ' -f 2)
fi

# uses netcat to lint the file
echo "$eslintdtoken {\"cwd\":\"$PWD\",\"args\":[\"-f\",\"compact\",\"$1\"]}" | nc 127.0.0.1 "$eslintdport"

